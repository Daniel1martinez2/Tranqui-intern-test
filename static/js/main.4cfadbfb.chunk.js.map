{"version":3,"sources":["utils/api.ts","App/App.tsx","index.tsx"],"names":["apiBase","getRandomUserListRoute","getRandomUserList","a","fetch","method","headers","raw","json","users","UserBtn","userName","ListItem","disablePadding","ListItemButton","onClick","name","ListItemText","primary","UserList","List","map","user","index","App","useState","setUsers","setUserListFromFetch","then","data","useEffect","interval","setInterval","clearInterval","CssBaseline","Box","bgcolor","minHeight","p","Container","maxWidth","Paper","Typography","variant","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAMA,EAAU,wBACVC,EAAyB,SAIlBC,EAAiB,uCAAG,8BAAAC,EAAA,sEACbC,MAAM,GAAD,OAAIJ,GAAJ,OAAcC,GAA0B,CAC7DI,OAAQ,MACRC,QAAQ,CACN,eAAgB,sBAJW,cACzBC,EADyB,gBAOXA,EAAIC,OAPO,cAOzBC,EAPyB,yBAQxBA,GARwB,2CAAH,qD,uCCcxBC,EAAkC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAIxC,OACE,cAACC,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,cAACC,EAAA,EAAD,CACEC,QALiB,kBDLGC,ECKeL,ODJzCP,MAAM,GAAD,OAAIJ,GAAJ,OAAcC,EAAd,YAAwCe,GAAQ,CACnDX,OAAQ,MACRC,QAAQ,CACN,eAAgB,sBAJK,IAACU,GCStB,SAGE,cAACC,EAAA,EAAD,CAAcC,QAASP,SAMzBQ,EAAoC,SAAC,GAAa,IAAZV,EAAW,EAAXA,MAC5C,OACE,cAACW,EAAA,EAAD,UACGX,EAAMY,KAAK,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAAqBZ,SAAUW,GAAjBC,SAqChCC,MAhCf,WAAgB,IAAD,EACaC,mBAAmB,IADhC,mBACNhB,EADM,KACCiB,EADD,KAGPC,EAAuB,WAC3BzB,IACC0B,MAAM,SAAAC,GAAI,OAAIH,EAASG,OAY1B,OATAC,qBAAU,WACRH,IACA,IAAMI,EAAWC,aAAY,WAC3BL,MACC,KACH,OAAO,kBAAMM,cAAcF,MAC3B,IAGM,eAAC,WAAD,WACN,cAACG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKC,QAAQ,UAAUC,UAAU,QAAQC,EAAG,EAA5C,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,UACE,cAACN,EAAA,EAAD,CAAKG,EAAG,EAAR,SACG7B,EAAM,IAAM,cAACiC,EAAA,EAAD,CAAYC,QAAQ,KAApB,iCAGflC,EAAMmC,OAAS,GAAK,cAAC,EAAD,CAAUnC,MAAOA,aChE/CoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4cfadbfb.chunk.js","sourcesContent":["const apiBase = 'http://localhost:3333'; \nconst getRandomUserListRoute = '/users';\n\n//Get random user \n\nexport const getRandomUserList = async () => {\n  const raw = await fetch(`${apiBase}${getRandomUserListRoute}`, {\n    method: 'GET',\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  });\n  const users = await raw.json(); \n  return users; \n}\n\nexport const nameRequest = (name: string) => {\n  fetch(`${apiBase}${getRandomUserListRoute}/${name}`, {\n    method: 'GET',\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  });\n}","import React, {Fragment, useEffect, useState} from 'react';\nimport { Container, CssBaseline, Paper, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { getRandomUserList, nameRequest } from '../utils/api';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n// import {UserList} from '../components/UserList/UserList';\nimport List from '@mui/material/List';\n// import UserBtn from '../UserBtn/UserBtn';  \ninterface UserListProps {\n  users: string[];\n}\ninterface UserBtnProps {\n  userName: string;\n}\n\n\n\nconst UserBtn: React.FC<UserBtnProps> = ({userName}) => {\n\n  const userBtnHandler = () => nameRequest(userName); \n\n  return (\n    <ListItem disablePadding>\n      <ListItemButton\n        onClick={userBtnHandler}\n      >\n        <ListItemText primary={userName} />\n      </ListItemButton>\n    </ListItem>\n  )\n}\n\nconst UserList: React.FC<UserListProps> = ({users}) => {\nreturn (\n  <List>\n    {users.map( (user, index) => <UserBtn key={index} userName={user}/>)}\n  </List>\n)\n}\n\nfunction App() {\n  const [users, setUsers] = useState<string[]>([]);\n  \n  const setUserListFromFetch = () => {\n    getRandomUserList()\n    .then( data => setUsers(data));\n  }\n\n  useEffect(() => {\n    setUserListFromFetch();\n    const interval = setInterval(() => {\n      setUserListFromFetch(); \n    }, 5000)\n    return () => clearInterval(interval);\n  },[]);\n\n\n  return (<Fragment>\n    <CssBaseline />\n    <Box bgcolor=\"#eeeeee\" minHeight=\"100vh\" p={4}>\n      <Container maxWidth=\"sm\">\n        <Paper>\n          <Box p={4}>\n            {users[0] && <Typography variant=\"h4\">users to render</Typography>}\n          </Box>\n        </Paper>\n        { users.length > 0 && <UserList users={users}/> }\n      </Container>\n    </Box>\n  </Fragment>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}